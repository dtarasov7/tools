–ö–æ–Ω–µ—á–Ω–æ! –í–æ—Ç **–ø–æ–ª–Ω—ã–π —Å–∫—Ä–∏–ø—Ç**, –∫–æ—Ç–æ—Ä—ã–π:

---

### ‚úÖ –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:

1. **–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–∞—Ä–æ–ª—å** –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ  
2. **–†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—Ç —Ñ–∞–π–ª**, –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å –ø–æ–º–æ—â—å—é **`ansible-vault`** (—Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è `ansible_vault`)
3. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç **—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç** –∫–∞–∫ `TYPE_TEXT`
4. –£—Ö–æ–¥–∏—Ç –≤ **—Ñ–æ–Ω (–¥–µ–º–æ–Ω)**
5. **–ñ–¥—ë—Ç –Ω–∞–∂–∞—Ç–∏—è `Shift + Break`**
6. **–í–ø–µ—á–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç** –≤ –∞–∫—Ç–∏–≤–Ω–æ–µ –æ–∫–Ω–æ
7. **–ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–∏ —É–¥–µ—Ä–∂–∞–Ω–∏–∏ –∫–ª–∞–≤–∏—à**

---

## üì¶ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–¥–∏–Ω —Ä–∞–∑):

```bash
pip3 install ansible-vault pynput
```

---

## üìÅ –ü—Ä–∏–º–µ—Ä –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞

–°–æ–∑–¥–∞–π —Ñ–∞–π–ª:
```bash
ansible-vault encrypt_string '–°–µ–∫—Ä–µ—Ç–Ω–∞—è —Å—Ç—Ä–æ–∫–∞' --name secret_var > secret.vault
```

---

## ‚úÖ –ü–æ–ª–Ω—ã–π –∫–æ–¥: `vault_typing_daemon.py`

```python
#!/usr/bin/env python3
import os
import sys
import time
import getpass
from pynput import keyboard
from ansible_vault import Vault

# –§–∞–π–ª —Å –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
VAULT_FILE = 'secret.vault'
LOG_FILE = '/tmp/type_daemon.log'
PID_FILE = '/tmp/type_daemon.pid'

# –ö–ª–∞–≤–∏—à–∏ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: Shift + Break
COMBINATION = {keyboard.Key.shift, keyboard.Key.break_key}
current_keys = set()
already_triggered = False

# –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
kbd_controller = keyboard.Controller()

# –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –∑–¥–µ—Å—å
TYPE_TEXT = ""


def log(msg):
    with open(LOG_FILE, "a") as f:
        f.write(f"[{time.strftime('%Y-%m-%d %H:%M:%S')}] {msg}\n")


def decrypt_vault_file(password):
    try:
        with open(VAULT_FILE, 'r', encoding='utf-8') as f:
            encrypted = f.read()
        vault = Vault(password)
        decrypted = vault.load(encrypted)
        log("–£—Å–ø–µ—à–Ω–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞")
        return decrypted['secret_var']
    except Exception as e:
        log(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–µ: {e}")
        sys.exit("–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å –∏–ª–∏ —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞")


def type_secret():
    try:
        global already_triggered
        if already_triggered:
            return
        kbd_controller.type(TYPE_TEXT)
        already_triggered = True
    except Exception as e:
        log(f"–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞: {e}")


def on_press(key):
    global already_triggered
    if key in COMBINATION:
        current_keys.add(key)
        if COMBINATION.issubset(current_keys) and not already_triggered:
            log("–ü–µ—Ä–µ—Ö–≤–∞—Ç: Shift + Break ‚Äî –≤–ø–µ—á–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É")
            type_secret()
    else:
        current_keys.clear()


def on_release(key):
    global already_triggered
    if key in current_keys:
        current_keys.remove(key)
    if not COMBINATION.issubset(current_keys):
        already_triggered = False


def daemonize():
    if os.fork() > 0:
        sys.exit(0)
    os.setsid()
    if os.fork() > 0:
        sys.exit(0)

    sys.stdout.flush()
    sys.stderr.flush()

    with open('/dev/null', 'rb', 0) as f:
        os.dup2(f.fileno(), sys.stdin.fileno())
    with open('/dev/null', 'ab', 0) as f:
        os.dup2(f.fileno(), sys.stdout.fileno())
        os.dup2(f.fileno(), sys.stderr.fileno())

    with open(PID_FILE, 'w') as f:
        f.write(str(os.getpid()))


def main():
    global TYPE_TEXT
    print("üîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏:")
    password = getpass.getpass()

    TYPE_TEXT = decrypt_vault_file(password)
    log("–¢–µ–∫—Å—Ç –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω")

    daemonize()

    with keyboard.Listener(on_press=on_press, on_release=on_release) as listener:
        listener.join()


if __name__ == "__main__":
    main()
```

---

## üß™ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:

1. –ü–æ–¥–≥–æ—Ç–æ–≤—å `secret.vault`, –∫–∞–∫ –≤—ã—à–µ.
2. –ó–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç:
   ```bash
   chmod +x vault_typing_daemon.py
   ./vault_typing_daemon.py
   ```
3. –í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ.
4. –ü–µ—Ä–µ–π–¥–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–∫–Ω–æ, –Ω–∞–∂–º–∏ `Shift + Break` ‚Äî —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –≤–ø–∏—Å–∞–Ω.

---

## üõë –ö–∞–∫ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:

```bash
kill $(cat /tmp/type_daemon.pid)
```

---

–•–æ—á–µ—à—å ‚Äî –¥–æ–±–∞–≤–ª—é –ø–æ–¥–¥–µ—Ä–∂–∫—É **–º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à**, **—Å–∏–≥–Ω–∞–ª–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞**, –∏–ª–∏ **–∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –≤ X-—Å–µ—Å—Å–∏–∏**.
